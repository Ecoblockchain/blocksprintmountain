// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":false,"inputs":[{"name":"contractName","type":"bytes32"},{"name":"multiplier","type":"uint256"},{"name":"waitingWeeks","type":"uint256"},{"name":"maxLoan","type":"uint256"}],"name":"createContract","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"contractsByFounderLength","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"who","type":"address"},{"name":"contractName","type":"bytes32"},{"name":"contractAddress","type":"address"}],"name":"addContractMember","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"uint256"}],"name":"contractsByFounder","outputs":[{"name":"contractName","type":"bytes32"},{"name":"contractAddress","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"contractsByMemberLength","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"name","type":"bytes32"},{"name":"mountain","type":"address"}],"name":"joinMountain","outputs":[],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"},{"name":"","type":"uint256"}],"name":"contractsByMember","outputs":[{"name":"contractName","type":"bytes32"},{"name":"contractAddress","type":"address"}],"type":"function"}],
    binary: "6060604052610a1b806100126000396000f3606060405236156100605760e060020a600035046276173181146100625780631d52de8d14610130578063aadbc52d14610148578063c12fb8f9146101a1578063c4279682146101ea578063e790aa9e14610202578063ed0aebbd146102c9575b005b610312600435602435604435606435600060008585858533604051610570806104ab833901808660001916815260200185815260200184815260200183815260200182600160a060020a0316815260200195505050505050604051809103906000f033600160a060020a031690915260208290526040822080546001810180835582818380158290116103635760020281600202836000526020600020918201910161036391905b8082111561043e5760008155600181018054600160a060020a031916905560020161010a565b61032f60043560016020526000908152604090205481565b6100606004356024356044355b600160a060020a0383166000908152600260205260409020805460018101808355828183801582901161044b5760020281600202836000526020600020918201910161044b919061010a565b61034160043560243560006020819052828152604090208054829081101561000257506000908152602090206002909102018054600190910154909150600160a060020a031682565b61032f60043560036020526000908152604090205481565b61006060043560243580600160a060020a031663399761c0336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f1156100025750506040515115156001141590506104a75780600160a060020a03166349df720833846040518360e060020a0281526004018083600160a060020a0316815260200182600019168152602001925050506000604051808303816000876161da5a03f115610002575050506104a7338383610155565b61034160043560243560026020526000828152604090208054829081101561000257506000908152602090206002909102018054600190910154909150600160a060020a031682565b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b60408051928352600160a060020a039190911660208301528051918290030190f35b50505060009283525060208083206040805180820182528b815283018690526002939093020189815560019081018054600160a060020a0319168617905533600160a060020a0390811680865292829052838520805490920190915582517f49df7208000000000000000000000000000000000000000000000000000000008152600481019290925260c960020a662337bab73232b90260248301529151918416926349df720892604483810193829003018183876161da5a03f115610002575050506104423360c960020a662337bab73232b90283610155565b5090565b95945050505050565b505050600092835250602080832060408051808201825287815283018690526002939093020194855560019485018054600160a060020a03191690941790935533600160a060020a031682526003909252208054909101905550565b505056606060405260405160a08061057083395061010060405251600090815561054590819061002b90396000f3606060405236156100cf5760e060020a6000350463117af28981146100d15780631b3ed722146100da57806328148214146100e35780632e1a7d4d14610214578063365a530614610214578063399761c014610242578063421715c21461027457806349df72081461029f5780634b77c468146103625780634d853ee51461038857806364afef301461039a57806375d0c0dc146103b5578063b51459fe14610274578063be0403fc146103be578063d0e30db0146103c7578063d1c8314e146103f2578063d294cb0f146103fb575b005b61041360075481565b61041360025481565b61041d60043560068054829081101561000257506000526007027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8101547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408201547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418301547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d428401547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d438501547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d448601547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d459690960154600160a060020a03959095169593949293919290919087565b6100cf600435600160a060020a03331660009081526005602052604090205460ff1660011461045657610002565b61044a600435600160a060020a03811660009081526005602052604081205460ff1681141561026f575060015b919050565b610413600160a060020a03331660009081526005602052604081205460ff1660011461045957610002565b6100cf600435602435600160a060020a0382166000908152600560209081526040808320805460ff1916600190811790915560068054600890945291909320829055918101808355828183801582901161045c5760070281600702836000526020600020918201910161045c91905b8082111561053f57805473ffffffffffffffffffffffffffffffffffffffff19168155600060018201819055600282018190556003820181905560048201819055600582018190558186015560070161030e565b6100cf600435600154600090600160a060020a0390811633919091161461053b57610002565b610413600154600160a060020a031681565b61041360043560056020526000908152604090205460ff1681565b61041360005481565b61041360045481565b6100cf600160a060020a03331660009081526005602052604090205460ff1660011461054357610002565b61041360035481565b61041360043560096020526000908152604090205481565b6060908152602090f35b606096875260809590955260a09390935260c09190915260e0908152610100919091526101209190915290f35b15156060908152602090f35b50565b90565b50505091909060005260206000209060070201600060e0604051908101604052803381526020016000815260200142815260200160008152602001600081526020016000815260200185815260200150909190915060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505560408201518160020160005055606082015181600301600050556080820151816004016000505560a0820151816005016000505560c0820151816006016000505550505060076000818150548092919060010191905055505b5050565b5090565b56",
    unlinked_binary: "6060604052610a1b806100126000396000f3606060405236156100605760e060020a600035046276173181146100625780631d52de8d14610130578063aadbc52d14610148578063c12fb8f9146101a1578063c4279682146101ea578063e790aa9e14610202578063ed0aebbd146102c9575b005b610312600435602435604435606435600060008585858533604051610570806104ab833901808660001916815260200185815260200184815260200183815260200182600160a060020a0316815260200195505050505050604051809103906000f033600160a060020a031690915260208290526040822080546001810180835582818380158290116103635760020281600202836000526020600020918201910161036391905b8082111561043e5760008155600181018054600160a060020a031916905560020161010a565b61032f60043560016020526000908152604090205481565b6100606004356024356044355b600160a060020a0383166000908152600260205260409020805460018101808355828183801582901161044b5760020281600202836000526020600020918201910161044b919061010a565b61034160043560243560006020819052828152604090208054829081101561000257506000908152602090206002909102018054600190910154909150600160a060020a031682565b61032f60043560036020526000908152604090205481565b61006060043560243580600160a060020a031663399761c0336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f1156100025750506040515115156001141590506104a75780600160a060020a03166349df720833846040518360e060020a0281526004018083600160a060020a0316815260200182600019168152602001925050506000604051808303816000876161da5a03f115610002575050506104a7338383610155565b61034160043560243560026020526000828152604090208054829081101561000257506000908152602090206002909102018054600190910154909150600160a060020a031682565b60408051600160a060020a03929092168252519081900360200190f35b60408051918252519081900360200190f35b60408051928352600160a060020a039190911660208301528051918290030190f35b50505060009283525060208083206040805180820182528b815283018690526002939093020189815560019081018054600160a060020a0319168617905533600160a060020a0390811680865292829052838520805490920190915582517f49df7208000000000000000000000000000000000000000000000000000000008152600481019290925260c960020a662337bab73232b90260248301529151918416926349df720892604483810193829003018183876161da5a03f115610002575050506104423360c960020a662337bab73232b90283610155565b5090565b95945050505050565b505050600092835250602080832060408051808201825287815283018690526002939093020194855560019485018054600160a060020a03191690941790935533600160a060020a031682526003909252208054909101905550565b505056606060405260405160a08061057083395061010060405251600090815561054590819061002b90396000f3606060405236156100cf5760e060020a6000350463117af28981146100d15780631b3ed722146100da57806328148214146100e35780632e1a7d4d14610214578063365a530614610214578063399761c014610242578063421715c21461027457806349df72081461029f5780634b77c468146103625780634d853ee51461038857806364afef301461039a57806375d0c0dc146103b5578063b51459fe14610274578063be0403fc146103be578063d0e30db0146103c7578063d1c8314e146103f2578063d294cb0f146103fb575b005b61041360075481565b61041360025481565b61041d60043560068054829081101561000257506000526007027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8101547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408201547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418301547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d428401547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d438501547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d448601547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d459690960154600160a060020a03959095169593949293919290919087565b6100cf600435600160a060020a03331660009081526005602052604090205460ff1660011461045657610002565b61044a600435600160a060020a03811660009081526005602052604081205460ff1681141561026f575060015b919050565b610413600160a060020a03331660009081526005602052604081205460ff1660011461045957610002565b6100cf600435602435600160a060020a0382166000908152600560209081526040808320805460ff1916600190811790915560068054600890945291909320829055918101808355828183801582901161045c5760070281600702836000526020600020918201910161045c91905b8082111561053f57805473ffffffffffffffffffffffffffffffffffffffff19168155600060018201819055600282018190556003820181905560048201819055600582018190558186015560070161030e565b6100cf600435600154600090600160a060020a0390811633919091161461053b57610002565b610413600154600160a060020a031681565b61041360043560056020526000908152604090205460ff1681565b61041360005481565b61041360045481565b6100cf600160a060020a03331660009081526005602052604090205460ff1660011461054357610002565b61041360035481565b61041360043560096020526000908152604090205481565b6060908152602090f35b606096875260809590955260a09390935260c09190915260e0908152610100919091526101209190915290f35b15156060908152602090f35b50565b90565b50505091909060005260206000209060070201600060e0604051908101604052803381526020016000815260200142815260200160008152602001600081526020016000815260200185815260200150909190915060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505560408201518160020160005055606082015181600301600050556080820151816004016000505560a0820151816005016000505560c0820151816006016000505550505060076000818150548092919060010191905055505b5050565b5090565b56",
    address: "0x8065adecb4dc9822c129129f2fb2c3f870e86ee0",
    generated_with: "2.0.9",
    contract_name: "MountainFactory"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("MountainFactory error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("MountainFactory error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("MountainFactory error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("MountainFactory error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.MountainFactory = Contract;
  }

})();
