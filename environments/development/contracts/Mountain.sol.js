// Factory "morphs" into a Pudding class.
// The reasoning is that calling load in each context
// is cumbersome.

(function() {

  var contract_data = {
    abi: [{"constant":true,"inputs":[],"name":"memberInformationLength","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[],"name":"multiplier","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"memberInformation","outputs":[{"name":"memberAddress","type":"address"},{"name":"lastTransaction","type":"int256"},{"name":"lastTransactionDate","type":"uint256"},{"name":"totalOut","type":"uint256"},{"name":"totalIn","type":"uint256"},{"name":"balance","type":"int256"},{"name":"name","type":"bytes32"}],"type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"loan","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"member","type":"address"}],"name":"isMemberInvited","outputs":[{"name":"","type":"bool"}],"type":"function"},{"constant":true,"inputs":[],"name":"canBorrow","outputs":[{"name":"","type":"int256"}],"type":"function"},{"constant":false,"inputs":[{"name":"member","type":"address"},{"name":"name","type":"bytes32"}],"name":"addMember","outputs":[],"type":"function"},{"constant":false,"inputs":[{"name":"newMember","type":"address"}],"name":"invite","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"founder","outputs":[{"name":"","type":"address"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"memberStatus","outputs":[{"name":"","type":"uint8"}],"type":"function"},{"constant":true,"inputs":[],"name":"contractName","outputs":[{"name":"","type":"bytes32"}],"type":"function"},{"constant":true,"inputs":[],"name":"canWithdraw","outputs":[{"name":"","type":"int256"}],"type":"function"},{"constant":true,"inputs":[],"name":"maxLoan","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[],"name":"deposit","outputs":[],"type":"function"},{"constant":true,"inputs":[],"name":"waitingWeeks","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"accountBalance","outputs":[{"name":"","type":"int256"}],"type":"function"},{"inputs":[{"name":"name","type":"bytes32"},{"name":"multiplier","type":"uint256"},{"name":"waitingWeeks","type":"uint256"},{"name":"maxLoan","type":"uint256"},{"name":"founder","type":"address"}],"type":"constructor"}],
    binary: "606060405260405160a08061057083395061010060405251600090815561054590819061002b90396000f3606060405236156100cf5760e060020a6000350463117af28981146100d15780631b3ed722146100da57806328148214146100e35780632e1a7d4d14610214578063365a530614610214578063399761c014610242578063421715c21461027457806349df72081461029f5780634b77c468146103625780634d853ee51461038857806364afef301461039a57806375d0c0dc146103b5578063b51459fe14610274578063be0403fc146103be578063d0e30db0146103c7578063d1c8314e146103f2578063d294cb0f146103fb575b005b61041360075481565b61041360025481565b61041d60043560068054829081101561000257506000526007027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8101547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408201547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418301547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d428401547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d438501547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d448601547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d459690960154600160a060020a03959095169593949293919290919087565b6100cf600435600160a060020a03331660009081526005602052604090205460ff1660011461045657610002565b61044a600435600160a060020a03811660009081526005602052604081205460ff1681141561026f575060015b919050565b610413600160a060020a03331660009081526005602052604081205460ff1660011461045957610002565b6100cf600435602435600160a060020a0382166000908152600560209081526040808320805460ff1916600190811790915560068054600890945291909320829055918101808355828183801582901161045c5760070281600702836000526020600020918201910161045c91905b8082111561053f57805473ffffffffffffffffffffffffffffffffffffffff19168155600060018201819055600282018190556003820181905560048201819055600582018190558186015560070161030e565b6100cf600435600154600090600160a060020a0390811633919091161461053b57610002565b610413600154600160a060020a031681565b61041360043560056020526000908152604090205460ff1681565b61041360005481565b61041360045481565b6100cf600160a060020a03331660009081526005602052604090205460ff1660011461054357610002565b61041360035481565b61041360043560096020526000908152604090205481565b6060908152602090f35b606096875260809590955260a09390935260c09190915260e0908152610100919091526101209190915290f35b15156060908152602090f35b50565b90565b50505091909060005260206000209060070201600060e0604051908101604052803381526020016000815260200142815260200160008152602001600081526020016000815260200185815260200150909190915060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505560408201518160020160005055606082015181600301600050556080820151816004016000505560a0820151816005016000505560c0820151816006016000505550505060076000818150548092919060010191905055505b5050565b5090565b56",
    unlinked_binary: "606060405260405160a08061057083395061010060405251600090815561054590819061002b90396000f3606060405236156100cf5760e060020a6000350463117af28981146100d15780631b3ed722146100da57806328148214146100e35780632e1a7d4d14610214578063365a530614610214578063399761c014610242578063421715c21461027457806349df72081461029f5780634b77c468146103625780634d853ee51461038857806364afef301461039a57806375d0c0dc146103b5578063b51459fe14610274578063be0403fc146103be578063d0e30db0146103c7578063d1c8314e146103f2578063d294cb0f146103fb575b005b61041360075481565b61041360025481565b61041d60043560068054829081101561000257506000526007027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8101547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d408201547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418301547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d428401547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d438501547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d448601547ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d459690960154600160a060020a03959095169593949293919290919087565b6100cf600435600160a060020a03331660009081526005602052604090205460ff1660011461045657610002565b61044a600435600160a060020a03811660009081526005602052604081205460ff1681141561026f575060015b919050565b610413600160a060020a03331660009081526005602052604081205460ff1660011461045957610002565b6100cf600435602435600160a060020a0382166000908152600560209081526040808320805460ff1916600190811790915560068054600890945291909320829055918101808355828183801582901161045c5760070281600702836000526020600020918201910161045c91905b8082111561053f57805473ffffffffffffffffffffffffffffffffffffffff19168155600060018201819055600282018190556003820181905560048201819055600582018190558186015560070161030e565b6100cf600435600154600090600160a060020a0390811633919091161461053b57610002565b610413600154600160a060020a031681565b61041360043560056020526000908152604090205460ff1681565b61041360005481565b61041360045481565b6100cf600160a060020a03331660009081526005602052604090205460ff1660011461054357610002565b61041360035481565b61041360043560096020526000908152604090205481565b6060908152602090f35b606096875260809590955260a09390935260c09190915260e0908152610100919091526101209190915290f35b15156060908152602090f35b50565b90565b50505091909060005260206000209060070201600060e0604051908101604052803381526020016000815260200142815260200160008152602001600081526020016000815260200185815260200150909190915060008201518160000160006101000a815481600160a060020a03021916908302179055506020820151816001016000505560408201518160020160005055606082015181600301600050556080820151816004016000505560a0820151816005016000505560c0820151816006016000505550505060076000818150548092919060010191905055505b5050565b5090565b56",
    address: "0xb70053fa0a874cb03151101051c69df160185887",
    generated_with: "2.0.9",
    contract_name: "Mountain"
  };

  function Contract() {
    if (Contract.Pudding == null) {
      throw new Error("Mountain error: Please call load() first before creating new instance of this contract.");
    }

    Contract.Pudding.apply(this, arguments);
  };

  Contract.load = function(Pudding) {
    Contract.Pudding = Pudding;

    Pudding.whisk(contract_data, Contract);

    // Return itself for backwards compatibility.
    return Contract;
  }

  Contract.new = function() {
    if (Contract.Pudding == null) {
      throw new Error("Mountain error: Please call load() first before calling new().");
    }

    return Contract.Pudding.new.apply(Contract, arguments);
  };

  Contract.at = function() {
    if (Contract.Pudding == null) {
      throw new Error("Mountain error: Please call load() first before calling at().");
    }

    return Contract.Pudding.at.apply(Contract, arguments);
  };

  Contract.deployed = function() {
    if (Contract.Pudding == null) {
      throw new Error("Mountain error: Please call load() first before calling deployed().");
    }

    return Contract.Pudding.deployed.apply(Contract, arguments);
  };

  if (typeof module != "undefined" && typeof module.exports != "undefined") {
    module.exports = Contract;
  } else {
    // There will only be one version of Pudding in the browser,
    // and we can use that.
    window.Mountain = Contract;
  }

})();
